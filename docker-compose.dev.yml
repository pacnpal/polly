services:
  redis:
    image: redis:7-alpine
    container_name: polly-redis-dev
    ports:
      - "6340:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD:-polly_redis_pass}
    volumes:
      - redis_data_dev:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--no-auth-warning", "-a", "${REDIS_PASSWORD:-polly_redis_pass}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - polly-network-dev

  polly:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: polly-app-dev
    ports:
      - "127.0.0.1:8000:8000"
    env_file:
      - .env
    environment:
      - DISCORD_TOKEN=${DISCORD_TOKEN}
      - DISCORD_CLIENT_ID=${DISCORD_CLIENT_ID}
      - DISCORD_CLIENT_SECRET=${DISCORD_CLIENT_SECRET}
      - DISCORD_REDIRECT_URI=${DISCORD_REDIRECT_URI}
      - SECRET_KEY=${SECRET_KEY}
      - REDIS_URL=redis://:${REDIS_PASSWORD:-polly_redis_pass}@redis:6379
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-polly_redis_pass}
      - DEBUG=true
    volumes:
      # Development volumes - live code mounting
      - ./polly:/app/polly:ro
      - ./templates:/app/templates:ro
      - ./migrate_database.py:/app/migrate_database.py:ro
      - ./pyproject.toml:/app/pyproject.toml:ro
      - ./uv.lock:/app/uv.lock:ro
      # Persistent data volumes
      - ./db:/app/db
      - ./data:/app/data
      - ./logs:/app/logs
      - ./static:/app/static
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - polly-network-dev
    user: "1000:1000"

volumes:
  redis_data_dev:
    driver: local

networks:
  polly-network-dev:
    driver: bridge
