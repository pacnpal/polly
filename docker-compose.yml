services:
  redis:
    image: redis:7-alpine
    container_name: polly-redis
    ports:
      - "6340:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD:-polly_redis_pass}
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--no-auth-warning", "-a", "${REDIS_PASSWORD:-polly_redis_pass}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - polly-network

  polly:
    build: .
    container_name: polly-app
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - DISCORD_TOKEN=${DISCORD_TOKEN}
      - DISCORD_CLIENT_ID=${DISCORD_CLIENT_ID}
      - DISCORD_CLIENT_SECRET=${DISCORD_CLIENT_SECRET}
      - DISCORD_REDIRECT_URI=${DISCORD_REDIRECT_URI}
      - SECRET_KEY=${SECRET_KEY}
      - REDIS_URL=redis://:${REDIS_PASSWORD:-polly_redis_pass}@redis:6379
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-polly_redis_pass}
    volumes:
      - ./data:/app/data
      - ./static:/app/static
      - ./logs:/app/logs
      - ./db:/app/db
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - polly-network

volumes:
  polly_db:
  redis_data:

networks:
  polly-network:
    driver: bridge
